.\"Generate README file for github: MANWIDTH=80 man ./cshatag.1 > README
.TH CSHATAG 1 "MAY 2012" Linux "User Manuals"
.SH NAME

cshatag \- compiled shatag

.SH SYNOPSIS

cshatag [OPTIONS] FILE [FILE...]

.SH DESCRIPTION

cshatag is a minimal and fast re-implementation of shatag
.br
( https://bitbucket.org/maugier/shatag , written in python
by Maxime Augier )
.br
in a compiled language.

cshatag is a tool to detect silent data corruption. It writes
the mtime and the sha256 checksum of a file into the file's
extended attributes. The filesystem needs to be mounted with
user_xattr enabled for this to work.
When run again, it compares stored mtime and checksum. If it
finds that the mtime is unchanged but the checksum has changed,
it warns on stderr.
In any case, the status of the file is printed to stdout
and the stored checksum is updated.

File statuses that appear on stdout are:
.br
	<outdated>    both mtime and checksum have changed
.br
	<ok>          both checksum and mtime stayed the same
.br
	<timechange>  only mtime has changed, checksum stayed the same
.br
	<corrupt>     mtime stayed the same but checksum changed

cshatag aims to be format-compatible with shatag and uses the
same extended attributes (see the COMPATIBILITY section).

cshatag was written in C in 2012 and has been
rewritten in Go in 2019.

.SH OPTIONS

-recursive  recursively process the contents of directories
.br
-remove     remove cshatag's xattrs from FILE
.br
-q          quiet mode - don't report <ok> files
.br
-qq         quiet2 mode - only report <corrupt> files and errors

.SH EXAMPLES

Check all regular files in the file tree below the current working directory:
.br
# cshatag -recursive . > cshatag.log
.br
Errors like corrupt files will then be printed to stderr
or grep for "corrupt" in cshatag.log.

To remove the extended attributes from all files:
.br
# cshatag -recursive -remove .

.SH "RETURN VALUE"

0 Success
.br
1 Wrong number of arguments
.br
2 One or more files could not be opened
.br
3 One or more files is not a regular file
.br
4 Extended attributes could not be written to one or more files
.br
5 At least one file was found to be corrupt
.br
6 More than one type of error occurred

.SH COMPATIBILITY

cshatag writes the user.shatag.ts field with full integer
nanosecond precision, while python uses a double for the
whole mtime and loses the last few digits.

.SH AUTHOR
Jakob Unterwurzacher <jakobunt@gmail.com>, https://github.com/rfjakob/cshatag

.SH COPYRIGHT
Copyright 2012 Jakob Unterwurzacher. MIT License.

.SH "SEE ALSO"
shatag(1), sha256sum(1), getfattr(1), setfattr(1)
